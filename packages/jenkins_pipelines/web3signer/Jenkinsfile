def secrets = [
        [path: 'secret/COMMON', 
        engineVersion: 2, 
        secretValues: [
            [envVar: 'GIT_CRED', vaultKey: 'GIT_CRED'],
            [envVar: 'GIT_URL', vaultKey: 'GIT_URL'],
            [envVar: 'SERVER_URL', vaultKey: 'SERVER_URL']
        ]],
        [path: 'secret/ETC_MORDOR_SIGNER', 
        engineVersion: 2, 
        secretValues: [ 
            [envVar:   "WEB3SIGNER_IMAGE", vaultKey:    "WEB3SIGNER_IMAGE"],
            [envVar:   "WEB3SIGNER_HTTP_LISTEN_HOST", vaultKey:    "WEB3SIGNER_HTTP_LISTEN_HOST"],
            [envVar:   "WEB3SIGNER_HTTP_LISTEN_PORT", vaultKey:    "WEB3SIGNER_HTTP_LISTEN_PORT"],
            [envVar:   "WEB3SIGNER_CONFIG_FILE", vaultKey:    "WEB3SIGNER_CONFIG_FILE"],
            [envVar:   "WEB3SIGNER_METRICS_PORT", vaultKey:    "WEB3SIGNER_METRICS_PORT"],
            [envVar:   "WEB3SIGNER_DATA_PATH", vaultKey:    "WEB3SIGNER_DATA_PATH"],
        ]]
    ]


pipeline {
    agent any
 
    stages {

        stage(' Purge') {
            steps{
                withVault([vaultSecrets: secrets]) {
                    sh """
                        cd packages/compose/web3signer/
                        docker stack rm ${env.JOB_NAME}_CLUSTER  || echo "No service running"
                    """
                    
                }
            }
        }
    
        stage('Rest') {
            steps{
                sh 'sleep 10'
            }
        }
        
        stage('Boot') {
    	   steps{
    	        withVault([vaultSecrets: secrets]) {
                    sh """
    	                cd packages/compose/web3signer/
    	                docker stack deploy -c docker-compose.eth1.yml ${env.JOB_NAME}_CLUSTER
    	            """
    	       }
    	    }
        }
    }//STAGES

    post {
    changed {
        withCredentials([string(credentialsId: 'discord_webhook', variable: 'WEBHOOK')]) {
            discordSend description: 'Jenkins Pipeline Build', 
            link: BUILD_URL, 
            successful: currentBuild.resultIsBetterOrEqualTo('SUCCESS'), 
            title: JOB_NAME, 
            webhookURL: WEBHOOK
            }
        }
    } //POST

} //PIPELINE

