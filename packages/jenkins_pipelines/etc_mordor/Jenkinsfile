
pipeline {
    agent any
    environment{
        common = load 'packages/jenkins_pipelines/vars/common.groovy'
        mordor = load 'packages/jenkins_pipelines/vars/mordor.groovy'
    }
    stages {
        stage('MORDOR - Checkout') {
            steps {
    	    withVault([configuration: common.vaultConfiguration, vaultSecrets: common.secrets]) {
    	        checkout([
                    $class: 'GitSCM', 
                    branches: 
                        [[name: 'refs/heads/primary']],
                        doGenerateSubmoduleConfigurations: 
                            false,
                            extensions: [[$class: 'CloneOption', timeout: 120]], 
                            submoduleCfg: [],
                            userRemoteConfigs: 
                                [[
                                    credentialsId: env.GIT_CRED, 
                                    url: env.GIT_URL
                                ]]
                ]) 
            }}
        }

        stage('MORDOR - Build') {
            steps {
        	    withVault([configuration: common.vaultConfiguration, vaultSecrets: mordor.secrets]) {
                    sh 'docker pull $CG_IMAGE'
        	    }
            }
    	}

        stage('MORDOR - Purge') {
            steps{
                withVault([configuration: common.vaultConfiguration, vaultSecrets: mordor.secrets]) {
                    sh """
                        cd packages/compose/coregeth/
                        docker stack rm MORDOR_CLUSTER  || echo "No service running"
                    """
                    
                }
            }
        }
    
        stage('MORDOR - Rest') {
            steps{
                sh 'sleep 10'
            }
        }
        
        stage('MORDOR - Boot') {
    	   steps{
    	        withVault([configuration: common.vaultConfiguration, vaultSecrets: mordor.secrets]) {
                    sh """
    	                cd packages/compose/coregeth/
    	                docker stack deploy -c docker-compose.yml MORDOR_CLUSTER
    	            """
    	       }
    	    }
        }
    }//STAGES

    post {
    changed {
        withCredentials([string(credentialsId: 'discord_webhook', variable: 'WEBHOOK')]) {
            discordSend description: 'Jenkins Pipeline Build', 
            link: BUILD_URL, 
            successful: currentBuild.resultIsBetterOrEqualTo('SUCCESS'), 
            title: JOB_NAME, 
            webhookURL: WEBHOOK
            }
        }
    } //POST

} //PIPELINE