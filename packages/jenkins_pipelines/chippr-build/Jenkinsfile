def configuration = [vaultUrl: 'http://192.168.1.135:8200', 
                        vaultCredentialId: 'gh-vault', 
                        engineVersion: 2]
def secrets = [ 
  [path: 'secret/COMMON', engineVersion: 2, secretValues: [ 
    [envVar: 'GIT_CRED', vaultKey: 'GIT_CRED'], 
    [envVar: 'GIT_URL', vaultKey: 'GIT_URL'], 
    [envVar: 'SERVER_URL', vaultKey: 'SERVER_URL'],
    [envVar: 'DOCKERHUB_USERNAME', vaultKey: 'DOCKERHUB_USERNAME'], 
    [envVar: 'DOCKERHUB_PASSWORD', vaultKey: 'DOCKERHUB_PASSWORD'], 
    [envVar: 'DOCKERHUB_REPO', vaultKey: 'DOCKERHUB_REPO'],  
    ]
  ]
]

pipeline {

  environment {
    API_IMAGE="chipprbots/bridgette-api"
    V1_IMAGE="chipprbots/bridgette-v1"
    TW_IMAGE="chipprbots/bridgette-twitter"
    HOME = '.'
    WEB3_URL='https://www.ethercluster.com/etc'
    LOG_LEVEL='debug'
  }

  agent any

  stages {

    stage('Checkout the repo Git') {
      steps {
        checkout scm
      }
    }

    stage('Get latest of all repos'){
        steps {
            //use learna to run any git scripts in repos
            sh 'yarn run git'
        }
    }

    stage('Run unit tests'){
        steps {
            //run testing on all children
            sh 'yarn run test'
        }
    }

    stage('Bumping versions with Lerna') {
        steps {
            sh 'yarn run new-version'
        }
    }

    stage('Publish Docker Containers'){
        steps {
            //run learna build for docker packages
            sh 'yarn run build'
        }
        steps {
            //login to docker andf push packages
            withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DH_USER', passwordVariable: 'DH_PASS')]) {
                sh 'docker login -u $DH_USER -p $DH_PASS'
                sh 'docker push chipprbots/${CHIPPRAGI_IMAGE}:latest'
            }
        }
    }

    stage('Publish npm packages'){
        //publish NPM pach
    }
    
   }

   post {
    changed {
     withCredentials([string(credentialsId: 'discord_webhook', variable: 'WEBHOOK')]) {
        discordSend description: 'Jenkins Pipeline Build', 
        link: BUILD_URL, 
        successful: currentBuild.resultIsBetterOrEqualTo('SUCCESS'), 
        title: JOB_NAME, 
        webhookURL: WEBHOOK
     }
    }
  }
}
