version: '3.4'

services:
  besu-mainnet:
    image: ${BESU_IMAGE}
    volumes:
      - type: bind
        source: "${BESU_DATA_PATH}"
        target: /root
    command: >
               --network "${BESU_NETWORK}"
               --identity="${BESU_IDENTITY}"                                                                                                                                                                                                                  --rpc-http-enabled=true
               --rpc-ws-enabled=true
               --rpc-ws-host=0.0.0.0
               --data-path=/root
               --rpc-http-cors-origins=${BESU_CORS_ORIGINS}
               --rpc-http-host=0.0.0.0
               --host-whitelist="${BESU_HOST_WHITELIST}"
               --metrics-enabled
    ports:
      - '${BESU_RPC_PORT}:8545'
      - '${BESU_WS_PORT}:8546'
      - '${BESU_P2P_PORT}:30303'
      - '${BESU_METRIC_PORT}:9545'
    logging:
      driver: gelf
      options:
        tag: ${GELF_TAG}
        gelf-address: "${GELF_ADDRESS}"
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
  
  teku_node:
    image: ${TEKU_IMAGE}
    command: ["--network=${TEKU_NETWORK}",
              "--eth1-endpoint=http://besu_node:${RPC_PORT}",
              "--validator-keys=/opt/teku/data/validator/keys:/opt/teku/data/validator/passwords",
              "--p2p-port=9000",
              "--rest-api-enabled=true",
              "--rest-api-docs-enabled=true"]
    depends_on:
      - besu_node
    volumes:
      - type: bind
        source: "${TEKU_DATA_PATH}"
        target: /opt/teku/data
    ports:
      # Map the p2p port(9000) and REST API port(5051)
      - "${TEKU_P2P_PORT}:9000"
      - "${TEKU_API_PORT}:5051"
      - "${TEKU_METRIC_PORT}:8008"
    logging:
      driver: gelf
      options:
        tag: ${GELF_TAG}
        gelf-address: "${GELF_ADDRESS}"
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3

